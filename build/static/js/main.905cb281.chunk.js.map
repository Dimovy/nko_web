{"version":3,"sources":["panels/Home.js","panels/MakeCollection.js","panels/feed.js","panels/openPost.js","App.js","index.js"],"names":["Home","go","id","info","stretched","size","onClick","data-to","MakeCollection","setInfo","useState","target","setTarget","date","setDate","author","setAuthor","description","setDescription","donationType","setDonationType","donationValue","setDonationValue","donationAcc","setDonationAcc","donationName","setDonationName","endDate","setEndDate","endType","setEndType","radioClickTarget","previousState","radioClickDate","onChangeDonationValue","e","String","value","left","top","type","onChange","placeholder","before","name","defaultChecked","mode","onMouseUp","newElement","Date","now","slice","console","log","oldArray","Feed","map","donation","donationID","style","backgroundSize","src","header","subheader","Fragment","actions","data-id","OpenPost","Math","floor","height","width","borderRadius","backgroundImage","color","marginBottom","weight","backgroundColor","ROUTES","App","activePanel","setActivePanel","popout","setPopout","React","setDonationID","useEffect","a","bridge","subscribe","detail","data","fetchData","currentTarget","dataset","to","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905cb281.chunk.js","sourcesContent":["import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder';\n\n\nconst Home = ({ go, id, info}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Пожертвования</PanelHeader>\n\n\t\t<Placeholder stretched>\n\t\t\tУ Вас пока нет сборов.<br />Начинате доброе дело.\n\t\t\t<Div>\n\t\t\t\t<Button size=\"m\" onClick={go} data-to='makecollection' >Создать сбор</Button>\n\t\t\t</Div>\n\t\t</Placeholder>\n\n\t</Panel>\n);\n\n\nexport default Home;\n","import React, { useState } from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport FormLayoutGroup from '@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Radio from '@vkontakte/vkui/dist/components/Radio/Radio';\n\nconst MakeCollection = ({ go, id, setInfo }) => {\n    const [target, setTarget] = useState(true);\n    const [date, setDate] = useState(false);\n    const [author, setAuthor] = useState('');\n    const [description, setDescription] = useState('');\n    const [donationType, setDonationType] = useState('Целевой');\n    const [donationValue, setDonationValue] = useState('');\n    const [donationAcc, setDonationAcc] = useState('');\n    const [donationName, setDonationName] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [endType, setEndType] = useState('Сумма');\n\n    const radioClickTarget = () => {\n        setTarget(previousState => !previousState)\n        if (donationType === 'Постоянный') {\n            setDonationType('Целевой')\n        } else {\n            setDonationType('Постоянный')\n        }\n    }\n    const radioClickDate = () => {\n        setDate(previousState => !previousState)\n        if (endType === 'Сумма') {\n            setEndType('Дата')\n        } else {\n            setEndType('Сумма')\n        }\n    }\n\n    const onChangeDescription = (e) => {\n        setDescription(e.target.value)\n    }\n    const onChangeDonationName = (e) => {\n        setDonationName(e.target.value)\n    }\n    const onChangeDonationValue = (e) => {\n        setDonationValue(String(e.target.value))\n    }\n    const onChangeAuthor = (e) => {\n        setAuthor(e.target.value)\n    }\n    const onChangeDonationAcc = (e) => {\n        setDonationAcc(e.target.value)\n    }\n    const onChangeEndDate = (e) => {\n        setEndDate(e.target.value)\n    }\n    const addDonation = () => {\n        let newElement = {\n            author: author,\n            description: description,\n            donationType: donationType,\n            donationValue: donationValue,\n            donationAcc: donationAcc,\n            donationName: donationName,\n            endDate: endDate,\n            endType: endType,\n            id: String(Date.now()).slice(11, 13)\n        }\n        console.log(newElement)\n        setInfo(oldArray => [...oldArray, newElement])\n    }\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderButton onClick={go} data-to=\"home\" > <Icon24Cancel /></PanelHeaderButton>}>\n                Создать сбор\n                </PanelHeader>\n            <Div>\n                <FormLayout>\n                    <FormLayoutGroup top=\"Цель\">\n                        <Input type=\"text\" onChange={onChangeDonationName} placeholder=\"Название пожертвования\" />\n                    </FormLayoutGroup>\n                    <Group>\n                        <CellButton before={<Icon24Add />}>Добавить фотографию</CellButton>\n                    </Group>\n                    <FormLayout top=\"Тип сбора\">\n                        <div>\n                            <Radio name=\"radio\" onChange={radioClickTarget} value=\"target\" description=\"Когда есть определенная цель\" defaultChecked>Целевой сбор</Radio>\n                            <Radio name=\"radio\" value=\"monthly\" onChange={radioClickTarget} description=\"Если помощь нужна ежемесячно\">Регулярный сбор</Radio>\n                        </div>\n                    </FormLayout>\n                    {target ? <FormLayoutGroup top=\"Сумма сбора, ₽\">\n                        <Input type=\"number\" onChange={onChangeDonationValue} placeholder=\"Сколько нужно собрать\" />\n                    </FormLayoutGroup> :\n                        <FormLayoutGroup top=\"Сумма в месяц, ₽\">\n                            <Input type=\"number\" onChange={onChangeDonationValue} placeholder=\"Сколько нужно в месяц?\" />\n                        </FormLayoutGroup>}\n                    <FormLayoutGroup top=\"Описание\">\n                        <Textarea type=\"text\" onChange={onChangeDescription} placeholder=\"Длинное описание для очень красивого пожертвования, но мы не уверены, что так должно быть\" />\n                    </FormLayoutGroup>\n                    <FormLayout>\n                        <Select top=\"Получить средаства на\" onChange={onChangeDonationAcc} placeholder=\"Счёт VK Pay • 1235\">\n                            <option value=\"VK Pay\">VK Pay • 1235</option>\n                            <option value=\"Крата\">Карта</option>\n                        </Select>\n                    </FormLayout>\n                    <FormLayoutGroup top=\"Автор\">\n                        <Input type=\"text\" onChange={onChangeAuthor} placeholder=\"Иван Иванов\" />\n                    </FormLayoutGroup>\n                    {target ? <FormLayout top=\"Сбор завершится\">\n                        <div>\n                            <Radio name=\"radio\" onChange={radioClickDate} value=\"money\" defaultChecked>Когда соберем сумму</Radio>\n                            <Radio name=\"radio\" onChange={radioClickDate} value=\"date\">В определенную дату</Radio>\n                        </div>\n                    </FormLayout> : null}\n                    {target && date ? <FormLayoutGroup top=\"Дата завершения\">\n                        <Input type=\"date\" onChange={onChangeEndDate} placeholder=\"Выберите дату\" />\n                    </FormLayoutGroup> : null}\n                    <Button size=\"xl\" mode=\"primary\" onMouseUp={go} data-to='feed' onClick={addDonation}>Создать сбор</Button>\n\n                </FormLayout>\n            </Div>\n        </Panel>\n    )\n}\n\n\nexport default MakeCollection;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Banner from '@vkontakte/vkui/dist/components/Banner/Banner';\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress';\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow';\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\n\n\n\nconst Feed = ({ go, id, info }) => (\n    <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderButton onClick={go} data-to=\"makecollection\" > <Icon24Add /></PanelHeaderButton>}>\n            Новости\n            </PanelHeader>\n        {info !== '' ? info.map((donation, donationID) => (\n            <Banner\n                before={<Avatar size={96} mode=\"image\" style={{ backgroundSize: 'cover' }} src=\"https://i.imgur.com/uuiHNoh.png\" />}\n                header={donation.donationName}\n                subheader=\n                {<React.Fragment>\n                    <InfoRow header={donation.id !== '100' ? donation.donationValue + '₽' : 'Cумма собрана!'}>\n                        <Progress value={donation.id} />\n                    </InfoRow>\n                </React.Fragment>}\n                actions={donation.id !== '100' ? \n                <Button onClick={go} data-to=\"openpost\" data-id={donationID} >Помочь</Button> : \n                <Button onClick={go} data-to=\"openpost\" data-id={donationID} >Посмотреть</Button>}\n            />\n        )) : null}\n    </Panel>\n);\n\n\nexport default Feed;\n","import React from 'react';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport { Progress, SimpleCell, Group, Avatar, Div, InfoRow, Header, Banner, Text, Button } from '@vkontakte/vkui';\nimport Icon24BrowserBack from '@vkontakte/icons/dist/24/browser_back';\n\n\n\n\nconst OpenPost = ({ go, id, info, donationID }) => {\n    let value = Math.floor((info[donationID].id / 100) * info[donationID].donationValue);\n    return (\n        <Panel id={id}>\n            <PanelHeader\n                left={<PanelHeaderButton onClick={go} data-to=\"feed\" data-id={donationID}> <Icon24BrowserBack /></PanelHeaderButton>}>\n                Сбор\n        </PanelHeader>\n            <Div>\n                <div\n                    style={{\n                        height: '200px', width: '100%', borderRadius: '10px',\n                        backgroundImage: 'url(https://gagadget.com/media/post_big/vk_music.jpg)', backgroundSize: 'cover'\n                    }}>\n\n                </div>\n            </Div>\n            <Banner\n\n                mode=\"image\"\n                size=\"m\"\n                header={<span style={{ color: 'black' }}>{info[donationID].donationName}</span>}\n                subheader={\n                    <React.Fragment>\n                        <InfoRow header={<span>Собрано: <span style={{ color: 'black' }}>{value} ₽</span></span>}>\n                            <Progress style={{ marginBottom: '15px', color: 'rgb(68,174,76' }} value={info[donationID].id} />\n                        </InfoRow>\n                    </React.Fragment>}\n            />\n            <Group>\n                <Header mode=\"secondary\">{<span style={{ color: 'black' }}>Автор</span>}</Header>\n                <SimpleCell before={<Avatar size={48} src=\"https://i.imgur.com/T1WC6ky.png\" />} description='Волонтер'>{info[donationID].author}</SimpleCell>\n                {info[donationID].endType === 'Дата' ? <Group> \n                    <Header mode=\"secondary\">{<span style={{ color: 'black' }}>Дата завершения сбора:</span>}</Header> \n                    <Div>\n                    <Text weight=\"regular\" style={{ marginBottom: 16 }}>{info[donationID].endDate}</Text>\n                    </Div>\n                </Group>: null}\n                <Header mode=\"secondary\">{<span style={{ color: 'black' }}>Описание</span>}</Header>\n                <Div>\n                    <Text weight=\"regular\" style={{ marginBottom: 16 }}>{info[donationID].description}</Text>\n                </Div>\n            </Group>\n            <Div>\n               {info[donationID].id !== '100' ? <Button size=\"xl\" mode=\"primary\" style={{ marginBottom: '50px', backgroundColor: 'rgb(68,174,76' }}>Пожертвовать</Button> : null}\n            </Div>\n        </Panel>\n    )\n}\n\n\nexport default OpenPost;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport MakeCollection from './panels/MakeCollection';\nimport Feed from './panels/feed';\nimport OpenPost from './panels/openPost';\n\n\n\nconst ROUTES = {\n\tHOME: 'home',\n\tMAKECOLLECTION: 'makecollection',\n\tFEED: 'feed',\n\tOPENPOST: 'openpost'\n};\n\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState(ROUTES.HOME);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [info, setInfo] = React.useState([{\n\t\tauthor: 'Юлия Борисовна',\n\t\tdescription: 'В Германии очень дорогое лечение, требуется ваша помощь!',\n\t\tdonationType: 'Целевое',\n\t\tdonationValue: '1000000',\n\t\tdonationAcc: 'Карта',\n\t\tdonationName: 'На лечение Алексею Анатольевичу',\n\t\tendDate: '',\n\t\tendType: 'Сумма',\n\t\tid: String(100)\n\t}]);\n\tconst [donationID, setDonationID] = React.useState();\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\tsetDonationID(e.currentTarget.dataset.id)\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' go={go} info={info}/>\n\t\t\t<MakeCollection id='makecollection' setInfo={setInfo} go={go} />\n\t\t\t<Feed id='feed' info={info} go={go} />\n\t\t\t<OpenPost id='openpost' donationID={donationID} info={info} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}